version: "3.7"

services:
  db:
    image: postgres:latest
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: "bg_server_db"
    ports:
      - "5432:5432"
    volumes:
      - bg_server_db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: backend/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # ports:
    #   - "8888:8888"
    environment:
      DB_HOST: db
      REDIS_HOST: redis
    expose:
      - "8888"

  frontend:
    build:
      context: frontend/
    ports:
      - "3000:80"
    environment:
      SERVER_ROOT: "http://balancer"
      SERVER_PORT: 4000
      WS_SERVER_ROOT: "ws://balancer"
      WS_SERVER_PORT: 4000

  balancer:
    image: nginx:latest
    volumes:
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    ports:
      - "4000:4000"

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

volumes:
  bg_server_db:

networks:
  default:
    driver: bridge
    name: gameserver
